% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snap_sites.R
\name{snap_sites}
\alias{snap_sites}
\title{A function to snap sites in a shapefile to a stream grid}
\usage{
snap_sites(
  sites,
  streams,
  max_move,
  out,
  overwrite = FALSE,
  max_memory = 300,
  use_sp = TRUE,
  ...
)
}
\arguments{
\item{sites}{File name for a shapefile containing the locations of the survey sites in the current GRASS mapset.}

\item{streams}{File name for a binary streams raster in the current GRASS mapset. Snaps points to closest point on stream line.}

\item{max_move}{The maximum distance in cells that any site can be moved to snap it to the flow accumulation grid.}

\item{out}{The output file path.}

\item{overwrite}{Whether the output should be allowed to overwrite any existing files. Defaults to \code{FALSE}.}

\item{max_memory}{Max memory used in memory swap mode (MB). Defaults to \code{300}.}

\item{use_sp}{Logical to use 'sf' or 'stars' classes for vector objects. Defaults to \code{TRUE} to use 'stars' class.}

\item{...}{Additional arguments to \code{r.stream.snap}.}
}
\value{
Nothing. Note that a shapefile of snapped survey sites will be written to the location \code{out} and a shapefile called \code{basename(out)} will be imported into the GRASS mapset.
}
\description{
This function takes a set of survey site locations and makes sure that they are coincident with the point nearest the stream line within a specified distance. This is equivalent to snapping sites to a stream network. Note that this function calls \code{r.stream.snap}, which is a GRASS GIS add-on. It can be installed through the GRASS GUI.
}
\examples{
# Will only run if GRASS is running
if(check_running()){
# Load data set
dem <- system.file("extdata", "dem.tif", package = "rdwplus")
sites <- system.file("extdata", "site.shp", package = "rdwplus")
stream_shp <- system.file("extdata", "streams.shp", package = "rdwplus")

# Set environment parameters and import data to GRASS
set_envir(dem)
raster_to_mapset(rasters = c(dem), as_integer = c(FALSE))
vector_to_mapset(vectors = c(sites, stream_shp))

# Create binary stream
out_name <- paste0(tempdir(), "/streams_rast.tif")
rasterise_stream("streams", out_name, overwrite = TRUE)
reclassify_streams("streams_rast.tif", "streams_binary.tif", 
out_type = "binary", overwrite = TRUE)

# Snap sites to pour points (based on flow accumulation)
out_snap <- paste0(tempdir(), "/snapsite.shp")
snap_sites(sites = "site", streams = "streams_binary.tif", max_move = 2, 
out = out_snap, overwrite = TRUE)

}
}
